use windows::{Win32::Graphics::Direct3D12::*, Win32::Graphics::Dxgi::Common::*};

macro_rules! def {
    ($name:ident,$val:expr,$typ:ty) => {
        #[allow(non_camel_case_types)]
        #[repr(C, align(8))]
        pub struct $name {
            ty: D3D12_PIPELINE_STATE_SUBOBJECT_TYPE,
            v: $typ,
        }
        impl $name {
            pub fn new(v: $typ) -> Self {
                Self { ty: $val, v }
            }
        }
    };
}

def!(
    CD3DX12_PIPELINE_STATE_STREAM_FLAGS,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS,
    D3D12_PIPELINE_STATE_FLAGS
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_NODE_MASK,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK,
    D3D12_NODE_MASK
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_ROOT_SIGNATURE,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE,
    ID3D12RootSignature
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_PRIMITIVE_TOPOLOGY,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_PS,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS,
    D3D12_SHADER_BYTECODE
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_AS,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS,
    D3D12_SHADER_BYTECODE
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_MS,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS,
    D3D12_SHADER_BYTECODE
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_BLEND_DESC,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND,
    D3D12_BLEND_DESC
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL1,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1,
    D3D12_DEPTH_STENCIL_DESC1
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL_FORMAT,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT,
    DXGI_FORMAT
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_RASTERIZER,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER,
    D3D12_RASTERIZER_DESC
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_RENDER_TARGET_FORMATS,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS,
    D3D12_RT_FORMAT_ARRAY
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_DESC,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC,
    DXGI_SAMPLE_DESC
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_MASK,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK,
    u32
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_CACHED_PSO,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO,
    D3D12_CACHED_PIPELINE_STATE
);
def!(
    CD3DX12_PIPELINE_STATE_STREAM_VIEW_INSTANCING,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING,
    D3D12_VIEW_INSTANCING_DESC
);
